<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JIMMY</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jimmyju.github.io/"/>
  <updated>2017-11-21T08:05:01.000Z</updated>
  <id>https://jimmyju.github.io/</id>
  
  <author>
    <name>Jimmy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo博客之后续SEO优化</title>
    <link href="https://jimmyju.github.io/archives/4025323798.html"/>
    <id>https://jimmyju.github.io/archives/4025323798.html</id>
    <published>2017-11-20T04:57:11.000Z</published>
    <updated>2017-11-21T08:05:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>SEO (Search Engine Optimization)，即搜索引擎优化。简单来说，SEO就是您可以使用提升网站排名的所有方法的总称，SEO用于确保您的网站及其内容在搜索引擎结果页面（SERP）上的可见性。</p>
<a id="more"></a>
<h1 id="验证你的网站-让博客被搜索引擎找到"><a href="#验证你的网站-让博客被搜索引擎找到" class="headerlink" title="验证你的网站(让博客被搜索引擎找到)"></a>验证你的网站(让博客被搜索引擎找到)</h1><h2 id="查看你的博客是否被收入"><a href="#查看你的博客是否被收入" class="headerlink" title="查看你的博客是否被收入"></a>查看你的博客是否被收入</h2><p>在谷歌或者百度的搜索链接中，使用以下格式可以直接搜索自己的域名， 如果能搜索到就说明已经被收录，反之则没有。可以直接搜索自己的域名，或者加一些关键词来更好地判断，例如：<br><code>site: https://xxxxxx.github.io/</code></p>
<h2 id="提交我们的网站"><a href="#提交我们的网站" class="headerlink" title="提交我们的网站"></a>提交我们的网站</h2><p>若未被搜索引擎收录，则需进行以下配置，首先要让搜索引擎先验证我们对网站的所有权，两个搜索引擎提交的入口分别为：<br><a href="https://www.google.com/webmasters/tools/home?hl=zh-CN" target="_blank" rel="external">Google Search Console</a><img src="http://ozc87s7hq.bkt.clouddn.com/Google1.png" alt="Google1"></p>
<p><a href="http://ziyuan.baidu.com/site/siteadd" target="_blank" rel="external">百度站长平台</a><img src="http://ozc87s7hq.bkt.clouddn.com/baidu1.png" alt="baidu1"></p>
<p>有多种验证方式，这里推荐 <code>HTML</code> 文件上传方式。下载 <code>HTML</code> 验证文件，拷贝到 <code>Hexo/sources/</code> 文件夹下,为了使 hexo 不处理这两个验证文件，并且不生成关于这两个文件的 <code>sitemap</code>，我们需要打开验证文件，在最上面添加以下代码：</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attr">layout:</span> <span class="literal">false</span></div><div class="line"><span class="meta">---</span></div></pre></td></tr></table></figure>
<p>然后执行 hexo 部署命令</p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">hexo clean</span></div><div class="line">hexo g</div><div class="line">hexo d</div></pre></td></tr></table></figure>
<p>最后返回验证页面，就可以查看验证是否通过了</p>
<h1 id="生成Sitemap"><a href="#生成Sitemap" class="headerlink" title="生成Sitemap"></a>生成Sitemap</h1><p>Sitemap即网站地图，它的作用在于便于搜索引擎更加智能地抓取网站。最简单和常见的sitemap形式，是XML文件，在其中列出网站中的网址以及关于每个网址的其他元数据</p>
<h2 id="安装sitemap生成插件"><a href="#安装sitemap生成插件" class="headerlink" title="安装sitemap生成插件"></a>安装sitemap生成插件</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> hexo-generator-sitemap <span class="comment">--save</span></div><div class="line">npm <span class="keyword">install</span> hexo-generator-baidu-sitemap <span class="comment">--save</span></div></pre></td></tr></table></figure>
<h2 id="编辑站点目录下的-config-yml，添加一下字段"><a href="#编辑站点目录下的-config-yml，添加一下字段" class="headerlink" title="编辑站点目录下的_config.yml，添加一下字段"></a>编辑站点目录下的_config.yml，添加一下字段</h2><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#hexo sitemap</span></div><div class="line"><span class="symbol">sitemap:</span></div><div class="line"><span class="symbol">  path:</span> sitemap.xml</div><div class="line"><span class="symbol">baidusitemap:</span></div><div class="line"><span class="symbol">  path:</span> baidusitemap.xml</div></pre></td></tr></table></figure>
<p>之后在执行 hexo g 后， public目录下发现生成了 <code>sitemap.xml</code>和<code>baidusitemap.xml</code> 就表示配置成功了。</p>
<h1 id="提交sitemap"><a href="#提交sitemap" class="headerlink" title="提交sitemap"></a>提交sitemap</h1><h2 id="向谷歌提交"><a href="#向谷歌提交" class="headerlink" title="向谷歌提交"></a>向谷歌提交</h2><p>向谷歌提交 sitemap 比较简单，登录 <a href="https://www.google.com/webmasters/tools/home?hl=zh-CN" target="_blank" rel="external">Google Search Console</a> ，选择已经验证过的站点，在<code>抓取</code> -&gt; <code>站点地图</code> 中，右上角可看到 <code>添加 / 测试站点地图</code>，添加 <code>sitemap.xml</code> 的链接即可，谷歌效率较高，一般当天或者第二天就能搜到微博了。如图：<img src="http://ozc87s7hq.bkt.clouddn.com/Google2.png" alt="Google2"></p>
<h2 id="向百度提交"><a href="#向百度提交" class="headerlink" title="向百度提交"></a>向百度提交</h2><p>与谷歌类似，我们可以直接向百度交 sitemap，登录 <a href="http://ziyuan.baidu.com/linksubmit/index" target="_blank" rel="external">百度站长平台</a>，点击 <code>网页抓取</code>-&gt; <code>链接提交</code>，在 <code>自动提交</code>中选择 <code>sitemap</code>，输入自己的<strong>域名加 baidusitemap.xml</strong> 即可，之后可查看 url 提取是否成功。</p>
<hr>
<p>由于 GitHub 屏蔽了百度的爬虫，即使提交成功，百度知道这里有可供抓取的链接，也不一定能抓取成功。 首先我们先检测一下百度爬虫是否可以抓取网页。在百度站长平台<code>网页抓取</code>-&gt;<code>抓取诊断</code> 中，选择<code>PC UA</code>点击抓取 , 查看抓取状态， 如果显示 <code>抓取失败</code>， 则需要进一步的配置。</p>
<h3 id="主动推送和自动推送"><a href="#主动推送和自动推送" class="headerlink" title="主动推送和自动推送"></a>主动推送和自动推送</h3><p>百度提供了多种链接提交的方式，可以综合使用，互为补充。</p>
<blockquote>
<p>如何选择链接提交方式<br>1、主动推送：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录。<br>2、自动推送：最为便捷的提交方式，请将自动推送的 JS 代码部署在站点的每一个页面源代码中，部署代码的页面在每次被浏览时，链接会被自动推送给百度。可以与主动推送配合使用。<br>3、sitemap：您可以定期将网站链接放到 sitemap 中，然后将 sitemap 提交给百度。百度会周期性的抓取检查您提交的 sitemap，对其中的链接进行处理，但收录速度慢于主动推送。<br>4、手动提交：一次性提交链接给百度，可以使用此种方式</p>
</blockquote>
<h4 id="自动推送"><a href="#自动推送" class="headerlink" title="自动推送"></a>自动推送</h4><p>next 主题已经部署了自动推送的代码，我们只需在主题配置文件 中找到 <code>baidu_push</code> 字段 , 设置其为 <code>true</code> 即可。</p>
<h4 id="主动推送"><a href="#主动推送" class="headerlink" title="主动推送"></a>主动推送</h4><p>我这里用的python自动推送脚本（Mac环境）如下所示：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="comment"># @Author: LoveNight</span></div><div class="line"><span class="comment"># @Last Modified by:   LoveNight</span></div><div class="line"><span class="comment"># @Last Modified by:   Keith</span></div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> json</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> BS</div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="comment">#import msvcrt</span></div><div class="line"><span class="string">"""</span></div><div class="line">hexo 博客专用，向百度站长平台提交所有网址</div><div class="line">本脚本必须放在hexo博客的根目录下执行！需要已安装生成百度站点地图的插件。</div><div class="line">百度站长平台提交链接：http://zhanzhang.baidu.com/linksubmit/index</div><div class="line">主动推送：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录。</div><div class="line">从中找到自己的接口调用地址</div><div class="line">python环境：</div><div class="line">pip install beautifulsoup4</div><div class="line">pip install requests</div><div class="line">xcode-select --install	</div><div class="line">pip install lxml </div><div class="line">"""</div><div class="line"><span class="comment"># ❌❌❌ 抄的需要更改这个URL！！！❌❌❌</span></div><div class="line">url = <span class="string">'http://data.zz.baidu.com/urls?site=jimmyju.github.io&amp;token=6Q3qdoIrzAtnwLWj'</span></div><div class="line">baidu_sitemap = os.path.join(sys.path[<span class="number">0</span>], <span class="string">'public'</span>, <span class="string">'baidusitemap.xml'</span>)</div><div class="line">google_sitemap = os.path.join(sys.path[<span class="number">0</span>], <span class="string">'public'</span>, <span class="string">'sitemap.xml'</span>)</div><div class="line">sitemap = [baidu_sitemap, google_sitemap]</div><div class="line"><span class="keyword">assert</span> (os.path.exists(baidu_sitemap) <span class="keyword">or</span> os.path.exists(</div><div class="line">    google_sitemap)), <span class="string">"没找到任何网站地图，请检查！"</span></div><div class="line"><span class="comment"># 从站点地图中读取网址列表</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUrls</span><span class="params">()</span>:</span></div><div class="line">    urls = []</div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> sitemap:</div><div class="line">        <span class="keyword">if</span> os.path.exists(_):</div><div class="line">            <span class="keyword">with</span> open(_, <span class="string">"r"</span>) <span class="keyword">as</span> f:</div><div class="line">                xml = f.read()</div><div class="line">        soup = BS(xml, <span class="string">"xml"</span>)</div><div class="line">        tags = soup.find_all(<span class="string">"loc"</span>)</div><div class="line">        urls += [x.string <span class="keyword">for</span> x <span class="keyword">in</span> tags]</div><div class="line">        <span class="keyword">if</span> _ == baidu_sitemap:</div><div class="line">            tags = soup.find_all(<span class="string">"breadCrumb"</span>, url=<span class="keyword">True</span>)</div><div class="line">            urls += [x[<span class="string">"url"</span>] <span class="keyword">for</span> x <span class="keyword">in</span> tags]</div><div class="line">    <span class="keyword">return</span> urls</div><div class="line"><span class="comment"># POST提交网址列表</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">postUrls</span><span class="params">(urls)</span>:</span></div><div class="line">    urls = set(urls)  <span class="comment"># 先去重</span></div><div class="line">    print(<span class="string">"一共提取出 %s 个网址"</span> % len(urls))</div><div class="line">    print(urls)</div><div class="line">    data = <span class="string">"\n"</span>.join(urls)</div><div class="line">    <span class="keyword">return</span> requests.post(url, data=data).text</div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    urls = getUrls()</div><div class="line">    result = postUrls(urls)</div><div class="line">    print(<span class="string">"提交结果："</span>)</div><div class="line">    print(result)</div><div class="line"><span class="comment">#    msvcrt.getch()</span></div></pre></td></tr></table></figure>
<h1 id="添加robots-txt"><a href="#添加robots-txt" class="headerlink" title="添加robots.txt"></a>添加robots.txt</h1><p>robots.txt（统一小写）是一种存放于网站根目录下的ASCII编码的文本文件，它的作用是告诉搜索引擎此网站中哪些内容是可以被爬取的，哪些是禁止爬取的。<br>在 <code>source</code> 目录下增加 <code>rebots.txt</code> 文件，网站生成后在网站的根目录(<code>站点目录/public/</code>)下。<br><strong>（请将域名改为自己的网站）</strong></p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">User-<span class="string">agent:</span> *</div><div class="line"><span class="string">Allow:</span> /</div><div class="line"><span class="string">Allow:</span> <span class="regexp">/archives/</span></div><div class="line"><span class="string">Allow:</span> <span class="regexp">/categories/</span></div><div class="line"><span class="string">Allow:</span> <span class="regexp">/tags/</span></div><div class="line"><span class="symbol"></span></div><div class="line">Disallow: <span class="regexp">/vendors/</span></div><div class="line"><span class="string">Disallow:</span> <span class="regexp">/js/</span></div><div class="line"><span class="string">Disallow:</span> <span class="regexp">/css/</span></div><div class="line"><span class="string">Disallow:</span> <span class="regexp">/fonts/</span></div><div class="line"><span class="string">Disallow:</span> <span class="regexp">/vendors/</span></div><div class="line"><span class="string">Disallow:</span> <span class="regexp">/fancybox/</span></div><div class="line"><span class="symbol"></span></div><div class="line">Sitemap: <span class="string">https:</span><span class="comment">//你的域名/sitemap.xml</span></div><div class="line"><span class="string">Sitemap:</span> <span class="string">https:</span><span class="comment">//你的域名/baidusitemap.xml</span></div></pre></td></tr></table></figure>
<p>Allow表示允许被访问的，Disallow是不允许的意思。注意后面两个Sitemap就是网站地图了。而网站地图前面说了是给爬虫用的。这里配置在robots中。</p>
<hr>
<h1 id="Url持久化"><a href="#Url持久化" class="headerlink" title="Url持久化"></a>Url持久化</h1><p>我们可以发现hexo默认生成的文章地址路径是 【网站名称／年／月／日／文章名称】。<img src="http://ozc87s7hq.bkt.clouddn.com/google3.png" alt="google3"><br>这种链接对搜索爬虫是很不友好的，第一它的url结构超过了三层，太深了。<br>下面我推荐一种方式：<br>安装 hexo-abbrlink</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> hexo-abbrlink <span class="comment">--save</span></div></pre></td></tr></table></figure>
<p>然后配置_config.yml</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># permalink: :title/</span></div><div class="line"><span class="symbol">permalink:</span> archives/:abbrlink.html</div><div class="line"><span class="symbol">abbrlink:</span></div><div class="line"><span class="symbol">  alg:</span> crc32  <span class="meta"># 算法：crc16(default) and crc32</span></div><div class="line"><span class="symbol">  rep:</span> hex    <span class="meta"># 进制：dec(default) and hex</span></div></pre></td></tr></table></figure>
<p>之后部署一下，就看到你的链接变成了这样：<img src="http://ozc87s7hq.bkt.clouddn.com/Google4.png" alt="Google4"></p>
<h1 id="添加-nofollow-标签"><a href="#添加-nofollow-标签" class="headerlink" title="添加 nofollow 标签"></a>添加 nofollow 标签</h1><p>给非友情链接的出站链接添加「nofollow」标签，nofollow 标签是由谷歌领头创新的一个「反垃圾链接」的标签，并被百度、yahoo 等各大搜索引擎广泛支持，引用 nofollow 标签的目的是：用于指示搜索引擎不要追踪（即抓取）网页上的带有 nofollow 属性的任何出站链接，以减少垃圾链接的分散网站权重。</p>
<p>首先修改 <code>footer.swig</code>（your-hexo-site\themes\next\layout_partials)</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;&#123; __(<span class="symbol">'footer</span>.powered', '&lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">"theme-link"</span> href=<span class="string">"http://hexo.io"</span>&gt;<span class="type">Hexo</span>&lt;/a&gt;') &#125;&#125;</div><div class="line">改成</div><div class="line">&#123;&#123; __(<span class="symbol">'footer</span>.powered', '&lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">"theme-link"</span> href=<span class="string">"http://hexo.io"</span> rel=<span class="string">"external nofollow"</span>&gt;<span class="type">Hexo</span>&lt;/a&gt;') &#125;&#125;</div></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;a <span class="keyword">class</span>=<span class="string">"theme-link"</span> href=<span class="string">"https://github.com/iissnan/hexo-theme-next"</span>&gt;</div><div class="line">改成</div><div class="line">&lt;a <span class="keyword">class</span>=<span class="string">"theme-link"</span> href=<span class="string">"https://github.com/iissnan/hexo-theme-next"</span> rel=<span class="string">"external nofollow"</span>&gt;</div></pre></td></tr></table></figure>
<p>再修改 <code>sidebar.swig</code>（your-hexo-site\themes\next\layout_macro）</p>
<figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123; link &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span></span><span class="template-variable">&#123;&#123; name &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></div><div class="line">改成</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span><span class="template-variable">&#123;&#123; link &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">rel</span>=<span class="string">"external nofollow"</span>&gt;</span></span><span class="template-variable">&#123;&#123; name &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></div></pre></td></tr></table></figure>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;a href=<span class="string">"http://creativecommons.org/licenses/&#123;&#123; theme.creative_commons &#125;&#125;/4.0"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"cc-opacity"</span> <span class="keyword">target</span>=<span class="string">"_blank"</span>&gt;</div><div class="line">改成</div><div class="line">&lt;a href=<span class="string">"http://creativecommons.org/licenses/&#123;&#123; theme.creative_commons &#125;&#125;/4.0"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"cc-opacity"</span> <span class="keyword">target</span>=<span class="string">"_blank"</span> rel=<span class="string">"external nofollow"</span>&gt;</div></pre></td></tr></table></figure>
<p>优化都完成后可通过谷歌搜索文章标题，测试是否被收录及排名。</p>
<h1 id="页面关键字优化"><a href="#页面关键字优化" class="headerlink" title="页面关键字优化"></a>页面关键字优化</h1><h2 id="title"><a href="#title" class="headerlink" title="title"></a>title</h2><p>文件路径是your-hexo-site\themes\next\layout\index.swig,打开编辑：</p>
<figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="xml"></span><span class="template-variable">&#123;&#123; config.title &#125;&#125;</span><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> theme.index_with_subtitle and config.subtitle %&#125;</span><span class="xml"> - </span><span class="template-variable">&#123;&#123;config.subtitle &#125;&#125;</span><span class="xml"></span></div><div class="line">改为：</div><div class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="xml"></span><span class="template-variable">&#123;&#123; config.title &#125;&#125;</span><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> theme.index_with_subtitle and config.subtitle %&#125;</span><span class="xml"> - </span><span class="template-variable">&#123;&#123;config.subtitle &#125;&#125;</span><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span><span class="template-variable">&#123;&#123; theme.description &#125;&#125;</span><span class="xml"> </span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure>
<h2 id="keywords-关键词、关键字"><a href="#keywords-关键词、关键字" class="headerlink" title="keywords(关键词、关键字)"></a>keywords(关键词、关键字)</h2><p>keywords在你_config.yml配置文件中就有。注意的是除了根目录上的要修改以外还有主题里的。否则就会出现默认的keywords。</p>
<h2 id="description"><a href="#description" class="headerlink" title="description"></a>description</h2><p>description就是这个页面的描述，随便写什么。</p>
<h1 id="Next主题自带SEO优化选项"><a href="#Next主题自带SEO优化选项" class="headerlink" title="Next主题自带SEO优化选项"></a>Next主题自带SEO优化选项</h1><p>主题配置文件<code>_config.yml</code>中有个选项是seo，默认是false，改成true 即开启了seo优化，如改变博文title等，然后相同文件下有个关键字选项keywords填充上，写博文时最好每篇博文都加上keywords。hexo的根目录配置文件_config.yml中title、subtitle和description也建议填上。</p>
<h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://fedoryx.github.io/Hexo-%E5%8D%9A%E5%AE%A2%E6%90%9C%E7%B4%A2-SEO-%E4%BC%98%E5%8C%96-%E8%B0%B7%E6%AD%8C%E7%AF%87/" target="_blank" rel="external">Hexo 博客搜索 SEO 优化 – 谷歌篇</a><br><a href="https://madordie.github.io/post/use-hexo-setup-blog/" target="_blank" rel="external">hexo的博客让百度收录</a><br><a href="http://www.dajipai.cc/" target="_blank" rel="external">hexo博客SEO优化</a><br><a href="http://www.yuan-ji.me/Hexo-%E4%BC%98%E5%8C%96%EF%BC%9A%E6%8F%90%E4%BA%A4sitemap%E5%8F%8A%E8%A7%A3%E5%86%B3%E7%99%BE%E5%BA%A6%E7%88%AC%E8%99%AB%E6%8A%93%E5%8F%96-GitHub-Pages-%E9%97%AE%E9%A2%98/" target="_blank" rel="external">提交 sitemap 及解决百度爬虫无法抓取 GitHub Pages 链接问题</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SEO (Search Engine Optimization)，即搜索引擎优化。简单来说，SEO就是您可以使用提升网站排名的所有方法的总称，SEO用于确保您的网站及其内容在搜索引擎结果页面（SERP）上的可见性。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://jimmyju.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://jimmyju.github.io/tags/Hexo/"/>
    
      <category term="SEO" scheme="https://jimmyju.github.io/tags/SEO/"/>
    
  </entry>
  
  <entry>
    <title>ABD WIFI</title>
    <link href="https://jimmyju.github.io/archives/20251.html"/>
    <id>https://jimmyju.github.io/archives/20251.html</id>
    <published>2017-06-16T12:14:21.000Z</published>
    <updated>2017-11-21T02:27:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>Android开发时，一般我们都是用usb线把手机和电脑连接起来进行调试工作，在这记录下如何使用无线连接。</p>
<a id="more"></a>
<h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><ul>
<li>手机和电脑必须在同一个局域网</li>
<li>数据线（第一次连接需要用到，一个再连接就不需要了）</li>
<li>需要知道怎么执行ADB命令</li>
</ul>
<h4 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h4><h5 id="1-打开手机端的5555端口"><a href="#1-打开手机端的5555端口" class="headerlink" title="1. 打开手机端的5555端口"></a>1. 打开手机端的5555端口</h5><p>让手机在指定的端口可以接收到TCP/IP连接。（当然，也可以不用5555，用5556或者9999等都可以，只要你喜欢）</p>
<ol>
<li>确保手机开启了usb调试</li>
<li>用usb线把手机和电脑连接起来</li>
<li>执行如下命令：<br><code>adb tcpip 5555</code><br>执行成功后就可以把usb线拔掉了。</li>
</ol>
<h5 id="2-找到手机的IP地址"><a href="#2-找到手机的IP地址" class="headerlink" title="2. 找到手机的IP地址"></a>2. 找到手机的IP地址</h5><p>一般在 设置-关于手机-状态信息-IP地址可以找到。 例如这里IP为：192.168.1.18</p>
<h5 id="3-通过IP地址连接手机"><a href="#3-通过IP地址连接手机" class="headerlink" title="3. 通过IP地址连接手机"></a>3. 通过IP地址连接手机</h5><p>执行如下命令：adb connect 192.168.1.18<br>3.1 如果提示如下则表示连接成功</p>
<blockquote>
<p>connected to 192.168.1.18</p>
</blockquote>
<p>3.2 若提示：</p>
<blockquote>
<p>unable to connect to 192.168.1.108:5555: Operation timed out</p>
</blockquote>
<p>可能你的IP地址输错了;或者adb服务不可用;或者手机跟电脑没有正确地处在一个局域网中；或者链接被代理Block了等等等…</p>
<p>3.3 若提示：</p>
<blockquote>
<p>unable to connect to 192.168.1.108:5555: Connection refused</p>
</blockquote>
<p>可能你手机的5555端口没有正确打开；或者有防火墙拦截等…</p>
<h5 id="4-如果没有连接成功"><a href="#4-如果没有连接成功" class="headerlink" title="4. 如果没有连接成功"></a>4. 如果没有连接成功</h5><p>出现了3.2或3.3的错误提示，或者其他任何错误，都可以尝试重启一下adb服务：<br><code>adb kill-server</code><br>然后重新尝试。</p>
<h5 id="5-连接成功"><a href="#5-连接成功" class="headerlink" title="5. 连接成功"></a>5. 连接成功</h5><p>如果连接成功的话，执行以下命令查看当前连接的设备列表： adb devices 可以看到连接的设备。</p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ol>
<li>更换一个网络环境（比如把手机和电脑从公司带回了家里），一般只需要按照新的手机IP重新进行一下connect即可。</li>
<li>如果手机重启了，就需要重新连接数据线再次开启5555端口了。</li>
<li>当然开启5555端口也并非必须通过adb，也有一些方法可以直接在手机上操作打开。但这些方法一般都需要root权限，如果你想要尝试在手机上进行开启，请注意安全。</li>
<li>有利就有弊——无线调试较有线调试而言，优势自不必说，缺点是无线数据的传输会比有线要慢一些。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Android开发时，一般我们都是用usb线把手机和电脑连接起来进行调试工作，在这记录下如何使用无线连接。&lt;/p&gt;
    
    </summary>
    
      <category term="android" scheme="https://jimmyju.github.io/categories/android/"/>
    
    
      <category term="ADB" scheme="https://jimmyju.github.io/tags/ADB/"/>
    
      <category term="Wi-Fi" scheme="https://jimmyju.github.io/tags/Wi-Fi/"/>
    
  </entry>
  
  <entry>
    <title>自定义view之onMeasure()的理解</title>
    <link href="https://jimmyju.github.io/archives/15602.html"/>
    <id>https://jimmyju.github.io/archives/15602.html</id>
    <published>2017-06-12T10:13:51.000Z</published>
    <updated>2017-11-21T02:27:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要记录下对于自定义view中方法的理解。<br>对于自定义view有三大流程：<code>onMeasure</code>（测量）、<code>onLayout</code>（布局）和<code>onDraw</code>（绘制）<br>接下来我就要说下<code>onMeasure()</code>这个方法：</p>
<a id="more"></a>
<h4 id="onMeasure"><a href="#onMeasure" class="headerlink" title="onMeasure"></a>onMeasure</h4><p>在布局文件中，对于自定义view的<code>layout_width</code>和<code>layout_height</code>不设置<code>wrap_content</code>,一般不需要进行处理，但如果要设置<code>wrap_content</code>，就要对宽高进行测量。<br><strong>onMeasure函数原型</strong>：<br><code>protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)</code></p>
<p>参数中的<code>widthMeasureSpec</code>和<code>heightMeasureSpec</code>里面包含了测量模式和尺寸，在这可以借助<strong>Android内置的MeasureSpec类</strong>来获取测量模式和尺寸：</p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">int widthMode</span> = MeasureSpec.getMode(widthMeasureSpec);</div><div class="line"><span class="attribute">int widthSize</span> = MeasureSpec.getSize(widthMeasureSpec);</div></pre></td></tr></table></figure>
<p>对于测量模式有三种情况：</p>
<table>
<thead>
<tr>
<th>测量模式</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>UNSPECIFIED</td>
<td>父容器没有对当前View有任何限制，当前View可以任意取尺寸</td>
</tr>
<tr>
<td>EXACTLY</td>
<td>当前尺寸就是当前View应该取的尺寸，对应于<code>match_parent</code>和具体数值情况</td>
</tr>
<tr>
<td>AT_MOST</td>
<td>当前View所能取的最大尺寸，一般是给定一个大小，view的尺寸不能超过该大小，一般用于<code>wrap_content</code></td>
</tr>
</tbody>
</table>
<p><strong>手重写onMeasure函数</strong></p>
<figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">@Overrideprotected <span class="keyword">void</span> onMeasure(<span class="built_in">int</span> widthMeasureSpec, <span class="built_in">int</span> heightMeasureSpec) &#123;</div><div class="line">    <span class="keyword">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</div><div class="line"></div><div class="line">    <span class="built_in">int</span> <span class="built_in">width</span> = MeasureSpec.getSize(widthMeasureSpec);</div><div class="line">    <span class="built_in">int</span> widthMode = MeasureSpec.getMode(widthMeasureSpec);</div><div class="line">    <span class="built_in">int</span> <span class="built_in">height</span> = MeasureSpec.getSize(heightMeasureSpec);</div><div class="line">    <span class="built_in">int</span> heightMode = MeasureSpec.getMode(heightMeasureSpec);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (widthMode == MeasureSpec.AT_MOST &amp;&amp; heightMode == MeasureSpec.AT_MOST) &#123;</div><div class="line">        setMeasuredDimension(WRAP_WIDTH, WRAP_HEIGHT);</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (widthMode == MeasureSpec.AT_MOST) &#123;</div><div class="line">        setMeasuredDimension(WRAP_WIDTH, <span class="built_in">height</span>);</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (heightMode == MeasureSpec.AT_MOST) &#123;</div><div class="line">        setMeasuredDimension(<span class="built_in">width</span>, WRAP_HEIGHT);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>只处理AT_MOST情况也就是<code>wrap_content</code>,其他情况则沿用系统的测量值即可。<code>setMeasuredDimension</code>会设置View宽高的测量值，只有<code>setMeasuredDimension</code>调用之后，才能使用<code>getMeasuredWidth()</code>和<code>getMeasuredHeight()</code>来获取视图测量出的宽高，以此之前调用这两个方法得到的值都会是0。</p>
<p>注意：在覆写onMeasure方法的时候，必须调用 <code>setMeasuredDimension(int,int)</code>来存储这个View经过测量得到的measured width and height。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要记录下对于自定义view中方法的理解。&lt;br&gt;对于自定义view有三大流程：&lt;code&gt;onMeasure&lt;/code&gt;（测量）、&lt;code&gt;onLayout&lt;/code&gt;（布局）和&lt;code&gt;onDraw&lt;/code&gt;（绘制）&lt;br&gt;接下来我就要说下&lt;code&gt;onMeasure()&lt;/code&gt;这个方法：&lt;/p&gt;
    
    </summary>
    
      <category term="android" scheme="https://jimmyju.github.io/categories/android/"/>
    
    
      <category term="view" scheme="https://jimmyju.github.io/tags/view/"/>
    
      <category term="android" scheme="https://jimmyju.github.io/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>基于hexo+github搭建个人博客</title>
    <link href="https://jimmyju.github.io/archives/54343.html"/>
    <id>https://jimmyju.github.io/archives/54343.html</id>
    <published>2017-05-30T14:01:54.000Z</published>
    <updated>2017-11-21T02:39:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>由于最近刚搭建的博客，所以特此来记录下我的个人经验。注：本文使用的环境为Mac OS。Windows的也基本差不多，可以参考。</p>
<a id="more"></a>
<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><p>需要安装的工具包括：Node.js, Git, Hexo。</p>
<h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>用来生成静态页面，建议<a href="https://nodejs.org/en/download/" target="_blank" rel="external">Node.js官网</a>下载，然后一路安装即可。</p>
<h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><p>用来将本地Hexo内容提交到Github上。Xcode自带Git，这里不再赘述。或者点击<a href="https://sourceforge.net/projects/git-osx-installer/" target="_blank" rel="external">安装程序</a>来下载安装git.</p>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>以上都安装完毕后之后就可以安装Hexo, Hexo 是一个快速、简洁且高效的博客框架。终端命令：</p>
<p><code>$ sudo npm install -g hexo-cli</code></p>
<blockquote>
<p>这里要需要输入管理员密码（Mac登录密码）即开始安装 (sudo:linux系统管理指令 -g:全局安装) </p>
</blockquote>
<p>接下来在你磁盘上新建一个文件夹，比如”Hexo”然后cd到这个目录下，执行hexo init命令：</p>
<p><code>$ hexo init blog</code></p>
<blockquote>
<p>blog是你建立的文件夹名称。cd到blog文件夹下，执行如下命令，安装npm：</p>
</blockquote>
<p><code>$ npm install</code></p>
<p>现在已经搭建起一个本地博客了，接着输入一下命令生成静态文件：</p>
<p><code>$ hexo g</code></p>
<p>然后输入如下命令：</p>
<p><code>$ hexo s</code></p>
<p>启动服务器。默认情况下，访问网址为：<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a>。(control+c停止)</p>
<h1 id="关联GitHub"><a href="#关联GitHub" class="headerlink" title="关联GitHub"></a>关联GitHub</h1><p>首先登录你的<a href="https://github.com" target="_blank" rel="external">Github帐号</a>，没有的可以先去注册下，这里就不多说了。</p>
<h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>在github首页，新建仓库，<strong>用户名.github.io固定写法</strong>,如下图所示：<img src="http://ozc87s7hq.bkt.clouddn.com/github.jpg" alt="github"><br>然后点击Create Repostory完成。</p>
<p>终端cd到blog文件夹下，vim打开_config.yml，(也可使用编辑器打开)命令如下：</p>
<p><code>$ vim _config.yml</code></p>
<p>打开后往下滑到最后，修改成下边的样子：</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">deploy</span>:</div><div class="line"><span class="attribute">type</span>: git</div><div class="line">  <span class="attribute">repository</span>: <span class="attribute">https</span>:<span class="comment">//github.com/username/username.github.io.git</span></div><div class="line">  <span class="attribute">branch</span>: master</div></pre></td></tr></table></figure>
<blockquote>
<p>你需要将repository后username换成你自己的用户名，需要注意的是<strong>冒号后面都有一个空格</strong></p>
</blockquote>
<p>在blog文件夹目录下执行生成静态页面命令：</p>
<p><code>$ hexo generate        或者：hexo g</code></p>
<blockquote>
<p>此时若出现如下报错：</p>
</blockquote>
<figure class="highlight subunit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ERROR </span>Local hexo not found in ~/blog</div><div class="line"><span class="keyword">ERROR </span>Try runing: 'npm install hexo --save‘</div></pre></td></tr></table></figure>
<blockquote>
<p>则执行命令：<code>npm install hexo --save</code><br>若无报错，自行忽略此步骤。</p>
</blockquote>
<p>再执行配置命令：<br><code>$ hexo deploy     或者：hexo d</code></p>
<blockquote>
<p>若执行命令hexo deploy仍然报错：无法连接git或找不到git，则执行如下命令来安装hexo-deployer-git：<code>$ npm install hexo-deployer-git --save</code><br>再次执行hexo generate和hexo deploy命令。  </p>
</blockquote>
<p>若你未关联Github，则执行hexo deploy命令时终端会提示你输入Github的用户名和密码，即</p>
<figure class="highlight rust"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Username <span class="keyword">for</span> <span class="symbol">'https</span>:<span class="comment">//github.com':</span></div><div class="line">Password <span class="keyword">for</span> <span class="symbol">'https</span>:<span class="comment">//github.com':</span></div></pre></td></tr></table></figure>
<blockquote>
<p>hexo deploy命令执行成功后，浏览器中打开网址<a href="http://jimmyju.github.io">http://jimmyju.github.io</a>（将jimmyju换成你的用户名）能看到和打开<a href="http://localhost:4000时一样的页面。" target="_blank" rel="external">http://localhost:4000时一样的页面。</a></p>
</blockquote>
<h2 id="添加ssh-key到Github"><a href="#添加ssh-key到Github" class="headerlink" title="添加ssh key到Github"></a>添加ssh key到Github</h2><h3 id="执行如下命令生成ssh-key"><a href="#执行如下命令生成ssh-key" class="headerlink" title="执行如下命令生成ssh key:"></a>执行如下命令生成ssh key:</h3><p><code>$ ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</code></p>
<blockquote>
<p>注意将<code>your_email@example.com</code>换成你自己注册Github的邮箱地址。<br>默认会在相应路径下（~/.ssh/id_rsa.pub）生成id_rsa和id_rsa.pub两个文件。</p>
</blockquote>
<h3 id="添加ssh-key到github中："><a href="#添加ssh-key到github中：" class="headerlink" title="添加ssh key到github中："></a>添加ssh key到github中：</h3><blockquote>
<p>Find前往文件夹~/.ssh/id_rsa.pub打开id_rsa.pub文件，里面的信息即为SSH key，将这些信息复制到Github的Add SSH key页面即可。</p>
<p>进入Github –&gt; Settings –&gt; SSH keys –&gt; add SSH key:</p>
<p>Title里任意添一个标题，将复制的内容粘贴到Key里，点击下方Add key绿色按钮即可。</p>
</blockquote>
<h1 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h1><p>接下来就是发布文章了，终端cd到blog文件夹下，执行如下命令新建文章：</p>
<p><code>$ hexo new &quot;postName&quot;</code></p>
<blockquote>
<p>名为postName.md的文件会建在目录/blog/source/_posts下，postName是文件名，为方便链接不建议掺杂汉字。你当然可以用vim来编辑文章。我用的MWeb编辑器，如果你有好用的markdown编辑器请推荐给我，感激不尽！</p>
</blockquote>
<p>注：<strong>文章编辑完成后，终端cd到blog文件夹下，执行如下命令来发布：</strong></p>
<p><code>$ hexo generate    可简化成：hexo g</code>        //生成静态页面<br><code>$ hexo deploy    可简化成：hexo d</code>    //将文章部署到Github</p>
<blockquote>
<p>至此，Mac上搭建基于Github的Hexo博客就完成了。</p>
</blockquote>
<h1 id="博客主题"><a href="#博客主题" class="headerlink" title="博客主题"></a>博客主题</h1><p>下面就说一下安装主题的方法，这里可以你可以到<a href="https://hexo.io/themes/" target="_blank" rel="external">Hexo官网主题</a>页去搜寻自己喜欢的theme。这里以hexo-theme-next为例, <strong>注意：</strong> 每根换一次主题之前，运行如下命令：<br><code>$ hexo clean   //清除缓存文件</code></p>
<h2 id="终端cd到-blog-目录下执行如下命令："><a href="#终端cd到-blog-目录下执行如下命令：" class="headerlink" title="终端cd到 blog 目录下执行如下命令："></a>终端cd到 blog 目录下执行如下命令：</h2><p><code>$ git clone https://github.com/iissnan/hexo-theme-next themes/next</code></p>
<blockquote>
<p>然后将blog目录下_config.yml里theme的名称landscape修改为next</p>
</blockquote>
<h2 id="终端cd到blog目录下执行如下命令-每次部署文章的步骤-："><a href="#终端cd到blog目录下执行如下命令-每次部署文章的步骤-：" class="headerlink" title="终端cd到blog目录下执行如下命令(每次部署文章的步骤)："></a>终端cd到blog目录下执行如下命令(每次部署文章的步骤)：</h2><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">$</span> hexo clean		<span class="comment">//清除缓存文件 (db.json) 和已生成的静态文件 (public)</span></div><div class="line"></div><div class="line"><span class="symbol">$</span> hexo g		<span class="comment">//生成缓存和静态文件</span></div><div class="line"></div><div class="line"><span class="symbol">$</span> hexo d		<span class="comment">//重新部署到服务器</span></div></pre></td></tr></table></figure>
<blockquote>
<p>至于更改theme内容比如名称、描述、头像等去修改blog/_config.yml文件和blog/themes/next/_config.yml文件中对应的属性名称即可， 不要忘记冒号:后加空格。 <a href="http://theme-next.iissnan.com" target="_blank" rel="external">NexT 使用文档</a>里有极详细的介绍。</p>
</blockquote>
<h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul>
<li><a href="https://hexo.io/zh-cn/" target="_blank" rel="external">hexo官网</a></li>
<li><a href="http://theme-next.iissnan.com" target="_blank" rel="external">NexT</a></li>
<li><a href="http://gonghonglou.com" target="_blank" rel="external">与佳期的个人博客</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于最近刚搭建的博客，所以特此来记录下我的个人经验。注：本文使用的环境为Mac OS。Windows的也基本差不多，可以参考。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://jimmyju.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://jimmyju.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Markdown</title>
    <link href="https://jimmyju.github.io/archives/17683.html"/>
    <id>https://jimmyju.github.io/archives/17683.html</id>
    <published>2017-05-29T12:17:32.000Z</published>
    <updated>2017-11-20T05:19:43.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown-语法和-MWeb-写作使用说明"><a href="#Markdown-语法和-MWeb-写作使用说明" class="headerlink" title="Markdown 语法和 MWeb 写作使用说明"></a>Markdown 语法和 MWeb 写作使用说明</h1><h2 id="Markdown-的设计哲学"><a href="#Markdown-的设计哲学" class="headerlink" title="Markdown 的设计哲学"></a>Markdown 的设计哲学</h2><blockquote>
<p>Markdown 的目標是實現「易讀易寫」。<br>不過最需要強調的便是它的可讀性。一份使用 Markdown 格式撰寫的文件應該可以直接以純文字發佈，並且看起來不會像是由許多標籤或是格式指令所構成。<br>Markdown 的語法有個主要的目的：用來作為一種網路內容的<em>寫作</em>用語言。</p>
</blockquote>
<a id="more"></a>
<h2 id="本文约定"><a href="#本文约定" class="headerlink" title="本文约定"></a>本文约定</h2><p>如果有写 <code>效果如下：</code>， 在 MWeb 编辑状态下只有用 <code>CMD + 4</code> 或 <code>CMD + R</code> 预览才可以看效果。</p>
<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>Markdown 语法：</p>
<figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># 第一级标题 `&lt;h1&gt;` </div><div class="line">## 第二级标题 `&lt;h2&gt;` </div><div class="line">###### 第六级标题 `&lt;h6&gt;`</div></pre></td></tr></table></figure>
<p>效果如下：</p>
<h1 id="第一级标题-lt-h1-gt"><a href="#第一级标题-lt-h1-gt" class="headerlink" title="第一级标题 &lt;h1&gt;"></a>第一级标题 <code>&lt;h1&gt;</code></h1><h2 id="第二级标题-lt-h2-gt"><a href="#第二级标题-lt-h2-gt" class="headerlink" title="第二级标题 &lt;h2&gt;"></a>第二级标题 <code>&lt;h2&gt;</code></h2><h6 id="第六级标题-lt-h6-gt"><a href="#第六级标题-lt-h6-gt" class="headerlink" title="第六级标题 &lt;h6&gt;"></a>第六级标题 <code>&lt;h6&gt;</code></h6><h2 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h2><p>Markdown 语法：</p>
<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">*这些文字会生成`&lt;em&gt;`*</div><div class="line">_这些文字会生成`&lt;u&gt;`_</div><div class="line"></div><div class="line">**这些文字会生成`&lt;strong&gt;`**</div><div class="line">__这些文字会生成`&lt;strong&gt;`__</div></pre></td></tr></table></figure>
<p>在 MWeb 中的快捷键为： <code>CMD + U</code>、<code>CMD + I</code>、<code>CMD + B</code><br>效果如下：</p>
<p><em>这些文字会生成<code>&lt;em&gt;</code></em><br><em>这些文字会生成<code>&lt;u&gt;</code></em></p>
<p><strong>这些文字会生成<code>&lt;strong&gt;</code></strong><br><strong>这些文字会生成<code>&lt;strong&gt;</code></strong></p>
<h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><p>四个及以上空格加回车。<br>如果不想打这么多空格，只要回车就为换行，请勾选：<code>Preferences</code> - <code>Themes</code> - <code>Translate newlines to &lt;br&gt; tags</code></p>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>Markdown 语法：</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="bullet">* </span>项目一 无序列表 <span class="code">`* + 空格键`</span></div><div class="line"><span class="bullet">* </span>项目二</div><div class="line"><span class="bullet">* </span>项目二的子项目一 无序列表 <span class="code">`TAB + * + 空格键`</span></div><div class="line"><span class="bullet">* </span>项目二的子项目二</div></pre></td></tr></table></figure>
<p>在 MWeb 中的快捷键为： <code>Option + U</code><br>效果如下：</p>
<ul>
<li>项目一 无序列表 <code>* + 空格键</code></li>
<li>项目二</li>
<li>项目二的子项目一 无序列表 <code>TAB + * + 空格键</code></li>
<li>项目二的子项目二</li>
</ul>
<h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>Markdown 语法：</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="bullet">1. </span>项目一 有序列表 <span class="code">`数字 + . + 空格键`</span></div><div class="line"><span class="bullet">2. </span>项目二 </div><div class="line"><span class="bullet">3. </span>项目三</div><div class="line"><span class="bullet">1. </span>项目三的子项目一 有序列表 <span class="code">`TAB + 数字 + . + 空格键`</span></div><div class="line"><span class="bullet">2. </span>项目三的子项目二</div></pre></td></tr></table></figure>
<p>效果如下：</p>
<ol>
<li>项目一 有序列表 <code>数字 + . + 空格键</code></li>
<li>项目二 </li>
<li>项目三</li>
<li>项目三的子项目一 有序列表 <code>TAB + 数字 + . + 空格键</code></li>
<li>项目三的子项目二</li>
</ol>
<h3 id="任务列表（Task-lists）"><a href="#任务列表（Task-lists）" class="headerlink" title="任务列表（Task lists）"></a>任务列表（Task lists）</h3><p>Markdown 语法：</p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-<span class="ruby"> [ ] 任务一 未做任务 <span class="string">`- + 空格 + [ ]`</span></span></div><div class="line">-<span class="ruby"> [x] 任务二 已做任务 <span class="string">`- + 空格 + [x]`</span></span></div></pre></td></tr></table></figure>
<p>效果如下：</p>
<ul>
<li>[ ] 任务一 未做任务 <code>- + 空格 + [ ]</code></li>
<li>[x] 任务二 已做任务 <code>- + 空格 + [x]</code></li>
</ul>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>Markdown 语法：</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">![<span class="string">GitHub set up</span>](<span class="link">http://zh.mweb.im/asset/img/set-up-git.gif</span>)</div><div class="line">格式: ![<span class="string">Alt Text</span>](<span class="link">url</span>)</div></pre></td></tr></table></figure>
<p><code>Control + Shift + I</code> 可插入Markdown语法。<br>如果是 MWeb 的文档库中的文档，还可以用拖放图片、<code>CMD + V</code> 粘贴、<code>CMD + Option + I</code> 导入这三种方式来增加图片。<br>效果如下：</p>
<p><img src="http://zh.mweb.im/asset/img/set-up-git.gif" alt="GitHub set up"></p>
<p>MWeb 引入的特别的语法来设置图片宽度，方法是在图片描述后加 <code>-w + 图片宽度</code> 即可，比如说要设置上面的图片的宽度为 140，语法如下：</p>
<p><img src="http://zh.mweb.im/asset/img/set-up-git.gif" alt="GitHub set up-w140"></p>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>Markdown 语法：</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">email <span class="xml"><span class="tag">&lt;<span class="name">example@example.com</span>&gt;</span></span></div><div class="line">[<span class="string">GitHub</span>](<span class="link">http://github.com</span>)</div><div class="line">自动生成连接  <span class="xml"><span class="tag">&lt;<span class="name">http:</span>//<span class="attr">www.github.com</span>/&gt;</span></span></div></pre></td></tr></table></figure>
<p><code>Control + Shift + L</code> 可插入Markdown语法。<br>如果是 MWeb 的文档库中的文档，拖放或<code>CMD + Option + I</code> 导入非图片时，会生成连接。<br>效果如下：</p>
<p>Email 连接： <a href="&#109;&#97;&#x69;&#108;&#x74;&#x6f;&#x3a;&#101;&#x78;&#x61;&#109;&#x70;&#x6c;&#x65;&#x40;&#101;&#120;&#x61;&#x6d;&#x70;&#x6c;&#101;&#46;&#x63;&#x6f;&#x6d;">&#101;&#x78;&#x61;&#109;&#x70;&#x6c;&#x65;&#x40;&#101;&#120;&#x61;&#x6d;&#x70;&#x6c;&#101;&#46;&#x63;&#x6f;&#x6d;</a><br><a href="http://github.com" target="_blank" rel="external">连接标题Github网站</a><br>自动生成连接像： <a href="http://www.github.com/" target="_blank" rel="external">http://www.github.com/</a> 这样</p>
<h2 id="区块引用"><a href="#区块引用" class="headerlink" title="区块引用"></a>区块引用</h2><p>Markdown 语法：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">某某说:</div><div class="line"><span class="meta">&gt;</span><span class="bash"> 第一行引用</span></div><div class="line"><span class="meta">&gt;</span><span class="bash"> 第二行费用文字</span></div></pre></td></tr></table></figure>
<p><code>CMD + Shift + B</code> 可插入Markdown语法。<br>效果如下：</p>
<p>某某说:</p>
<blockquote>
<p>第一行引用<br>第二行费用文字</p>
</blockquote>
<h2 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h2><p>Markdown 语法：</p>
<figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">像这样即可：`&lt;addr&gt;` `<span class="keyword">code</span>`</div></pre></td></tr></table></figure>
<p><code>CMD + K</code> 可插入Markdown语法。<br>效果如下：</p>
<p>像这样即可：<code>&lt;addr&gt;</code> <code>code</code></p>
<h2 id="多行或者一段代码"><a href="#多行或者一段代码" class="headerlink" title="多行或者一段代码"></a>多行或者一段代码</h2><p>Markdown 语法：</p>
<pre><code><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fancyAlert</span>(<span class="params">arg</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span>(arg) &#123;</div><div class="line">    $.facebox(&#123;<span class="attr">div</span>:<span class="string">'#foo'</span>&#125;)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</code></pre><p><code>CMD + Shift + K</code> 可插入Markdown语法。<br>效果如下：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fancyAlert</span>(<span class="params">arg</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span>(arg) &#123;</div><div class="line">    $.facebox(&#123;<span class="attr">div</span>:<span class="string">'#foo'</span>&#125;)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="顺序图或流程图"><a href="#顺序图或流程图" class="headerlink" title="顺序图或流程图"></a>顺序图或流程图</h2><p>Markdown 语法：</p>
<pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">张三-&gt;李四: 嘿，小四儿, 写博客了没?</div><div class="line">Note right of 李四: 李四愣了一下，说：</div><div class="line">李四--&gt;张三: 忙得吐血，哪有时间写。</div></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">st=&gt;start: 开始</div><div class="line">e=&gt;end: 结束</div><div class="line">op=&gt;operation: 我的操作</div><div class="line">cond=&gt;condition: 确认？</div><div class="line"></div><div class="line">st-&gt;op-&gt;cond</div><div class="line">cond(yes)-&gt;e</div><div class="line">cond(no)-&gt;op</div></pre></td></tr></table></figure>
</code></pre><p>效果如下（ <code>Preferences</code> - <code>Themes</code> - <code>Enable sequence &amp; flow chart</code> 才会看到效果 ）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">张三-&gt;李四: 嘿，小四儿, 写博客了没?</div><div class="line">Note right of 李四: 李四愣了一下，说：</div><div class="line">李四--&gt;张三: 忙得吐血，哪有时间写。</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">st=&gt;start: 开始</div><div class="line">e=&gt;end: 结束</div><div class="line">op=&gt;operation: 我的操作</div><div class="line">cond=&gt;condition: 确认？</div><div class="line"></div><div class="line">st-&gt;op-&gt;cond</div><div class="line">cond(yes)-&gt;e</div><div class="line">cond(no)-&gt;op</div></pre></td></tr></table></figure>
<p>更多请参考：<a href="http://bramp.github.io/js-sequence-diagrams/" target="_blank" rel="external">http://bramp.github.io/js-sequence-diagrams/</a>, <a href="http://adrai.github.io/flowchart.js/" target="_blank" rel="external">http://adrai.github.io/flowchart.js/</a></p>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>Markdown 语法：</p>
<figure class="highlight 1c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">第一格表头 <span class="string">| 第二格表头</span></div><div class="line">--------- <span class="string">| -------------</span></div><div class="line">内容单元格 第一列第一格 <span class="string">| 内容单元格第二列第一格</span></div><div class="line">内容单元格 第一列第二格 多加文字 <span class="string">| 内容单元格第二列第二格</span></div></pre></td></tr></table></figure>
<p>效果如下：</p>
<table>
<thead>
<tr>
<th>第一格表头</th>
<th>第二格表头</th>
</tr>
</thead>
<tbody>
<tr>
<td>内容单元格 第一列第一格</td>
<td>内容单元格第二列第一格</td>
</tr>
<tr>
<td>内容单元格 第一列第二格 多加文字</td>
<td>内容单元格第二列第二格</td>
</tr>
</tbody>
</table>
<h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><p>Markdown 语法：</p>
<p>加删除线像这样用： <del>删除这些</del></p>
<p>效果如下：</p>
<p>加删除线像这样用： <del>删除这些</del></p>
<h2 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h2><p>以下三种方式都可以生成分隔线：</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="emphasis">***</span></div><div class="line"></div><div class="line"><span class="strong">*****</span></div><div class="line"></div><div class="line"><span class="bullet">- </span>- -</div></pre></td></tr></table></figure>
<p>效果如下：</p>
<hr>
<hr>
<hr>
<h2 id="MathJax"><a href="#MathJax" class="headerlink" title="MathJax"></a>MathJax</h2><p>Markdown 语法：</p>
<figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">块级公式：</div><div class="line">$$	x = <span class="symbol">\d</span>frac&#123;-b <span class="symbol">\p</span>m <span class="symbol">\s</span>qrt&#123;b^2 - 4ac&#125;&#125;&#123;2a&#125; $$</div><div class="line"></div><div class="line"><span class="symbol">\\</span>[ <span class="symbol">\f</span>rac&#123;1&#125;&#123;<span class="symbol">\B</span>igl(<span class="symbol">\s</span>qrt&#123;<span class="symbol">\p</span>hi <span class="symbol">\s</span>qrt&#123;5&#125;&#125;-<span class="symbol">\p</span>hi<span class="symbol">\B</span>igr) e^&#123;<span class="symbol">\f</span>rac25 <span class="symbol">\p</span>i&#125;&#125; =</div><div class="line">1+<span class="symbol">\f</span>rac&#123;e^&#123;-2<span class="symbol">\p</span>i&#125;&#125; &#123;1+<span class="symbol">\f</span>rac&#123;e^&#123;-4<span class="symbol">\p</span>i&#125;&#125; &#123;1+<span class="symbol">\f</span>rac&#123;e^&#123;-6<span class="symbol">\p</span>i&#125;&#125;</div><div class="line">&#123;1+<span class="symbol">\f</span>rac&#123;e^&#123;-8<span class="symbol">\p</span>i&#125;&#125; &#123;1+<span class="symbol">\l</span>dots&#125; &#125; &#125; &#125; <span class="symbol">\\</span>]</div><div class="line"></div><div class="line">行内公式： $<span class="symbol">\G</span>amma(n) = (n-1)!<span class="symbol">\q</span>uad<span class="symbol">\f</span>orall n<span class="symbol">\i</span>n<span class="symbol">\m</span>athbb N$</div></pre></td></tr></table></figure>
<p>效果如下（<code>Preferences</code> - <code>Themes</code> - <code>Enable MathJax</code> 才会看到效果）：</p>
<p>块级公式：<br>$$    x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$</p>
<p>\[ \frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} =<br>1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {1+\frac{e^{-6\pi}}<br>{1+\frac{e^{-8\pi}} {1+\ldots} } } } \]</p>
<p>行内公式： $\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$</p>
<h2 id="脚注（Footnote）"><a href="#脚注（Footnote）" class="headerlink" title="脚注（Footnote）"></a>脚注（Footnote）</h2><p>Markdown 语法：</p>
<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">这是一个脚注：<span class="string">[^sample_footnote]</span></div></pre></td></tr></table></figure>
<p>效果如下：</p>
<blockquote>
<p>这是一个脚注：[^sample_footnote]</p>
<p>[^sample_footnote]: 这里是脚注信息</p>
</blockquote>
<h2 id="注释和阅读更多"><a href="#注释和阅读更多" class="headerlink" title="注释和阅读更多"></a>注释和阅读更多</h2><!-- comment -->
<!-- more -->
<p>Actions-&gt;Insert Read More Comment <em>或者</em> <code>Command + .</code><br><strong>注</strong> 阅读更多的功能只用在生成网站或博客时，插入时注意要后空一行。</p>
<h2 id="TOC"><a href="#TOC" class="headerlink" title="TOC"></a>TOC</h2><p>Markdown 语法：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[TOC]</div></pre></td></tr></table></figure>
<p>效果如下：</p>
<p>[TOC]</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Markdown-语法和-MWeb-写作使用说明&quot;&gt;&lt;a href=&quot;#Markdown-语法和-MWeb-写作使用说明&quot; class=&quot;headerlink&quot; title=&quot;Markdown 语法和 MWeb 写作使用说明&quot;&gt;&lt;/a&gt;Markdown 语法和 MWeb 写作使用说明&lt;/h1&gt;&lt;h2 id=&quot;Markdown-的设计哲学&quot;&gt;&lt;a href=&quot;#Markdown-的设计哲学&quot; class=&quot;headerlink&quot; title=&quot;Markdown 的设计哲学&quot;&gt;&lt;/a&gt;Markdown 的设计哲学&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Markdown 的目標是實現「易讀易寫」。&lt;br&gt;不過最需要強調的便是它的可讀性。一份使用 Markdown 格式撰寫的文件應該可以直接以純文字發佈，並且看起來不會像是由許多標籤或是格式指令所構成。&lt;br&gt;Markdown 的語法有個主要的目的：用來作為一種網路內容的&lt;em&gt;寫作&lt;/em&gt;用語言。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
